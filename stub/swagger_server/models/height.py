# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Height(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, height_id: int=None, zone: str=None, altitude: float=None):  # noqa: E501
        """Height - a model defined in Swagger

        :param height_id: The height_id of this Height.  # noqa: E501
        :type height_id: int
        :param zone: The zone of this Height.  # noqa: E501
        :type zone: str
        :param altitude: The altitude of this Height.  # noqa: E501
        :type altitude: float
        """
        self.swagger_types = {
            'height_id': int,
            'zone': str,
            'altitude': float
        }

        self.attribute_map = {
            'height_id': 'heightId',
            'zone': 'zone',
            'altitude': 'altitude'
        }
        self._height_id = height_id
        self._zone = zone
        self._altitude = altitude

    @classmethod
    def from_dict(cls, dikt) -> 'Height':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Height of this Height.  # noqa: E501
        :rtype: Height
        """
        return util.deserialize_model(dikt, cls)

    @property
    def height_id(self) -> int:
        """Gets the height_id of this Height.


        :return: The height_id of this Height.
        :rtype: int
        """
        return self._height_id

    @height_id.setter
    def height_id(self, height_id: int):
        """Sets the height_id of this Height.


        :param height_id: The height_id of this Height.
        :type height_id: int
        """

        self._height_id = height_id

    @property
    def zone(self) -> str:
        """Gets the zone of this Height.


        :return: The zone of this Height.
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone: str):
        """Sets the zone of this Height.


        :param zone: The zone of this Height.
        :type zone: str
        """

        self._zone = zone

    @property
    def altitude(self) -> float:
        """Gets the altitude of this Height.


        :return: The altitude of this Height.
        :rtype: float
        """
        return self._altitude

    @altitude.setter
    def altitude(self, altitude: float):
        """Sets the altitude of this Height.


        :param altitude: The altitude of this Height.
        :type altitude: float
        """

        self._altitude = altitude
