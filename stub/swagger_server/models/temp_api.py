# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TempApi(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, height_id: int=None, temp: float=None):  # noqa: E501
        """TempApi - a model defined in Swagger

        :param height_id: The height_id of this TempApi.  # noqa: E501
        :type height_id: int
        :param temp: The temp of this TempApi.  # noqa: E501
        :type temp: float
        """
        self.swagger_types = {
            'height_id': int,
            'temp': float
        }

        self.attribute_map = {
            'height_id': 'heightId',
            'temp': 'temp'
        }
        self._height_id = height_id
        self._temp = temp

    @classmethod
    def from_dict(cls, dikt) -> 'TempApi':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TempApi of this TempApi.  # noqa: E501
        :rtype: TempApi
        """
        return util.deserialize_model(dikt, cls)

    @property
    def height_id(self) -> int:
        """Gets the height_id of this TempApi.


        :return: The height_id of this TempApi.
        :rtype: int
        """
        return self._height_id

    @height_id.setter
    def height_id(self, height_id: int):
        """Sets the height_id of this TempApi.


        :param height_id: The height_id of this TempApi.
        :type height_id: int
        """

        self._height_id = height_id

    @property
    def temp(self) -> float:
        """Gets the temp of this TempApi.


        :return: The temp of this TempApi.
        :rtype: float
        """
        return self._temp

    @temp.setter
    def temp(self, temp: float):
        """Sets the temp of this TempApi.


        :param temp: The temp of this TempApi.
        :type temp: float
        """

        self._temp = temp
